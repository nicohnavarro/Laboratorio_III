// Generated by CoffeeScript 1.12.7
(function() {
  var Adapter, Stylus, flatten, nodefn, sourcemaps,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Adapter = require('../../adapter_base');

  sourcemaps = require('../../sourcemaps');

  nodefn = require('when/node/function');

  flatten = require('lodash.flatten');

  Stylus = (function(superClass) {
    extend(Stylus, superClass);

    function Stylus() {
      return Stylus.__super__.constructor.apply(this, arguments);
    }

    Stylus.prototype.name = 'stylus';

    Stylus.prototype.extensions = ['styl